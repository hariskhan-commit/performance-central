name: backend-ci

on:
  pull_request:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: performance_test
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports: ["6379:6379"]
    strategy:
      matrix:
        postgres-version: [15, 16]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install deps
        run: |
          pip install pip-tools
          pip install -r backend/requirements.txt
      - name: Static checks
        run: |
          ruff backend
          mypy backend --ignore-missing-imports
          safety check -r backend/requirements.txt
          bandit -r backend
      - name: Tests
        env:
          DATABASE_URL: postgresql+asyncpg://user:password@localhost:5432/performance_test
          REDIS_URL: redis://localhost:6379/0
          CELERY_BROKER_URL: redis://localhost:6379/0
          CELERY_RESULT_BACKEND: redis://localhost:6379/0
        run: pytest --cov=backend --cov-report=term-missing

  build-push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        run: |
          docker build -t ghcr.io/${{ github.repository }}/backend:${{ github.sha }} backend/
          docker push ghcr.io/${{ github.repository }}/backend:${{ github.sha }}

  migrate:
    runs-on: ubuntu-latest
    needs: build-push
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Run migrations
        env:
          DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}
        run: |
          docker run --rm -e DATABASE_URL=$DATABASE_URL ghcr.io/${{ github.repository }}/backend:${{ github.sha }} alembic upgrade head